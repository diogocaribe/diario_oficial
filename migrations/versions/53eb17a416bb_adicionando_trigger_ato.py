"""adicionando trigger ato

Revision ID: 53eb17a416bb
Revises: 6fc8e4f473c6
Create Date: 2024-12-13 14:32:45.649939

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '53eb17a416bb'
down_revision: Union[str, None] = '6fc8e4f473c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text('''
        -- Trigger que apaga todos os registro da publicacao caso algum ato do 
        -- conjuto da publicacao seja apagada
        -- Cria a função para a trigger
        CREATE OR REPLACE FUNCTION delete_atos_da_mesma_pubalicacao()
        RETURNS TRIGGER AS $$
        BEGIN
            -- Remove registros relacionados na mesma tabela
            DELETE FROM processing.ato a
            WHERE a.publicacao_id = OLD.publicacao_id;
            
            RAISE NOTICE 'Valor de OLD.publicacao_id: %', OLD.publicacao_id;
            -- Mudando o status da publicacao como não processada para ato
            UPDATE processing.publicacao p
            SET processada_para_ato = NULL
            WHERE p.id = OLD.publicacao_id;
            RAISE NOTICE 'Update de publicacao id: %', OLD.publicacao_id;
            RETURN OLD;
        END;
        $$ LANGUAGE plpgsql;
    '''))

    op.execute(sa.text('''
        CREATE TRIGGER after_delete_delete_atos_da_mesma_pubalicacao
        AFTER DELETE ON processing.ato
        FOR EACH ROW
        EXECUTE PROCEDURE delete_atos_da_mesma_pubalicacao();
    '''))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text('''
        DROP TRIGGER after_delete_delete_atos_da_mesma_pubalicacao ON processing.ato;
    '''))

    op.execute(sa.text('''
        DROP FUNCTION delete_atos_da_mesma_pubalicacao();
    '''))
    # ### end Alembic commands ###
