"""iniciando o banco

Revision ID: 9745a934e2fc
Revises:
Create Date: 2024-09-01 10:36:14.863727

"""

from typing import dataclass_transform, Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from diario_oficial.database.configs.connection import DBConnectionHandler
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = '9745a934e2fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    conn.execute(text('CREATE SCHEMA IF NOT EXISTS processing'))
    conn.execute(text('CREATE SCHEMA IF NOT EXISTS dominio'))

    #### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'doe_bruto',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            'criado_em',
            sa.DateTime(),
            server_default=sa.text('now()'),
            nullable=False,
            comment='Data e horario da coleta desse registro.',
        ),
        sa.Column('nro_edicao', sa.Integer(), nullable=True, comment='Edição do DOE coletado.'),
        sa.Column('dt_edicao', sa.Date(), nullable=True, comment='Data do DOE coletado.'),
        sa.Column(
            'existe',
            sa.Boolean(),
            nullable=False,
            comment='Se existe ou não publicação do DOE na data solicitada.',
        ),
        sa.Column(
            'doe_json',
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
            comment='Dados extraídos do DOE em formato json.',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_doe_bruto_id')),
        sa.UniqueConstraint('dt_edicao', name=op.f('uq_doe_bruto_dt_edicao')),
        sa.UniqueConstraint('nro_edicao', name=op.f('uq_doe_bruto_nro_edicao')),
        schema='processing',
    )
    op.create_index(op.f('ix_doe_bruto_id'), 'doe_bruto', ['id'], unique=False, schema='processing')
    op.create_table(
        'publicacao',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('doe_nro_edicao', sa.Integer(), nullable=False),
        sa.Column('nome_ato', sa.String(), nullable=False),
        sa.Column('identificador_link', sa.String(), nullable=False),
        sa.Column('link', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ['doe_nro_edicao'],
            ['processing.doe_bruto.nro_edicao'],
            name=op.f('fk_publicacao_doe_nro_edicao_doe_bruto'),
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_publicacao_id')),
        schema='processing',
    )
    op.create_index(
        op.f('ix_publicacao_id'), 'publicacao', ['id'], unique=False, schema='processing'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_publicacao_id'), table_name='publicacao', schema='processing')
    op.drop_table('publicacao', schema='processing')
    op.drop_index(op.f('ix_doe_bruto_id'), table_name='doe_bruto', schema='processing')
    op.drop_table('doe_bruto', schema='processing')
    # ### end Alembic commands ###
